#!/bin/sh
#dnsmasq

echo "checking dnsmasq..."
REASON=32 

cp_HANDLER=$(uci get cp_switch.main.which_handler)
ap_UP=$(uci get mesh.ap.up)
Myap_UP=$(uci get mesh.Myap.up)

# Number of dnsmasq instances based on current captive portal & public/private AP settings
case "${cp_HANDLER}${ap_UP}${Myap_UP}" in
	"000") DHCP_instances=0 ;;
	"001") DHCP_instances=1 ;;
	"010") DHCP_instances=1 ;;
	"011") DHCP_instances=2 ;;
	"100") DHCP_instances=0 ;;
	"101") DHCP_instances=1 ;;
	"110") DHCP_instances=0 ;;
	"111") DHCP_instances=1 ;;
	"400") DHCP_instances=0 ;;
	"401") DHCP_instances=1 ;;
	"410") DHCP_instances=0 ;;
	"411") DHCP_instances=1 ;;
	"500") DHCP_instances=0 ;;
	"501") DHCP_instances=1 ;;
	"510") DHCP_instances=0 ;;
	"511") DHCP_instances=1 ;;
	"600") DHCP_instances=0 ;;
	"601") DHCP_instances=1 ;;
	"610") DHCP_instances=0 ;;
	"611") DHCP_instances=1 ;;
	*) DHCP_instances=1 ;;
esac

T=0
while true ; do
	[ "$(INSTANCES dnsmasq)" -eq "$DHCP_instances" ] && break

	T=$((T + 1 ))
# READONLY
#	[ "$T" -gt 3 ] && /sbin/do_reboot $REASON	
	[ "$T" -gt 3 ] && logger 60_dnsmasq triggers reboot $REASON	


# READONLY
#	/etc/init.d/dhcpd stop
#	sleep 1
#	/etc/init.d/dhcpd start
#	sleep 5
done
#
